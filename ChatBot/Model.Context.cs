//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatBot
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_ChatBot_Entities : DbContext
    {
        public db_ChatBot_Entities()
            : base("name=db_ChatBot_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Answer> Answer { get; set; }
        public virtual DbSet<BotReply> BotReply { get; set; }
        public virtual DbSet<Entity> Entity { get; set; }
        public virtual DbSet<Intent> Intent { get; set; }
        public virtual DbSet<Question> Question { get; set; }
        public virtual DbSet<Score> Score { get; set; }
        public virtual DbSet<Session> Session { get; set; }
        public virtual DbSet<TrainedAnswer> TrainedAnswer { get; set; }
        public virtual DbSet<TrainedQuestion> TrainedQuestion { get; set; }
    
        public virtual ObjectResult<sp_Get_Intent_Statistics_Result> sp_Get_Intent_Statistics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Intent_Statistics_Result>("sp_Get_Intent_Statistics");
        }
    
        public virtual ObjectResult<string> sp_GetAnswer(Nullable<int> questionId, Nullable<int> sessionId, Nullable<int> intentId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(int));
    
            var intentIdParameter = intentId.HasValue ?
                new ObjectParameter("IntentId", intentId) :
                new ObjectParameter("IntentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetAnswer", questionIdParameter, sessionIdParameter, intentIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_QuestionInsert(string userInput, Nullable<int> intentId, Nullable<int> scoreId, Nullable<System.DateTime> dateTime, Nullable<int> sessionId)
        {
            var userInputParameter = userInput != null ?
                new ObjectParameter("UserInput", userInput) :
                new ObjectParameter("UserInput", typeof(string));
    
            var intentIdParameter = intentId.HasValue ?
                new ObjectParameter("IntentId", intentId) :
                new ObjectParameter("IntentId", typeof(int));
    
            var scoreIdParameter = scoreId.HasValue ?
                new ObjectParameter("ScoreId", scoreId) :
                new ObjectParameter("ScoreId", typeof(int));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_QuestionInsert", userInputParameter, intentIdParameter, scoreIdParameter, dateTimeParameter, sessionIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_ScoreInsert(Nullable<decimal> intentScore, Nullable<decimal> entityScore)
        {
            var intentScoreParameter = intentScore.HasValue ?
                new ObjectParameter("IntentScore", intentScore) :
                new ObjectParameter("IntentScore", typeof(decimal));
    
            var entityScoreParameter = entityScore.HasValue ?
                new ObjectParameter("EntityScore", entityScore) :
                new ObjectParameter("EntityScore", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_ScoreInsert", intentScoreParameter, entityScoreParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_AnswerInsert(Nullable<int> intentId, string answer, Nullable<bool> trainedAsnwer)
        {
            var intentIdParameter = intentId.HasValue ?
                new ObjectParameter("IntentId", intentId) :
                new ObjectParameter("IntentId", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var trainedAsnwerParameter = trainedAsnwer.HasValue ?
                new ObjectParameter("TrainedAsnwer", trainedAsnwer) :
                new ObjectParameter("TrainedAsnwer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_AnswerInsert", intentIdParameter, answerParameter, trainedAsnwerParameter);
        }
    
        public virtual ObjectResult<sp_GetTrainedAnswer_Result> sp_GetTrainedAnswer(string question)
        {
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTrainedAnswer_Result>("sp_GetTrainedAnswer", questionParameter);
        }
    
        public virtual int EditIntentAnswer(Nullable<int> answerID, string answer)
        {
            var answerIDParameter = answerID.HasValue ?
                new ObjectParameter("answerID", answerID) :
                new ObjectParameter("answerID", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditIntentAnswer", answerIDParameter, answerParameter);
        }
    
        public virtual int EditTrainedQnA(Nullable<int> questionId, Nullable<int> answerId, string question, string answer)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(int));
    
            var answerIdParameter = answerId.HasValue ?
                new ObjectParameter("answerId", answerId) :
                new ObjectParameter("answerId", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditTrainedQnA", questionIdParameter, answerIdParameter, questionParameter, answerParameter);
        }
    
        public virtual ObjectResult<sp_GetQnAbyIntent_Result> sp_GetQnAbyIntent(Nullable<int> intentId)
        {
            var intentIdParameter = intentId.HasValue ?
                new ObjectParameter("intentId", intentId) :
                new ObjectParameter("intentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetQnAbyIntent_Result>("sp_GetQnAbyIntent", intentIdParameter);
        }
    
        public virtual ObjectResult<sp_GetQuestionIntentScore_Result> sp_GetQuestionIntentScore(Nullable<int> intentId)
        {
            var intentIdParameter = intentId.HasValue ?
                new ObjectParameter("intentId", intentId) :
                new ObjectParameter("intentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetQuestionIntentScore_Result>("sp_GetQuestionIntentScore", intentIdParameter);
        }
    
        public virtual ObjectResult<sp_GetAnswerIntentStatistics_Result> sp_GetAnswerIntentStatistics(Nullable<int> intentId)
        {
            var intentIdParameter = intentId.HasValue ?
                new ObjectParameter("intentId", intentId) :
                new ObjectParameter("intentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAnswerIntentStatistics_Result>("sp_GetAnswerIntentStatistics", intentIdParameter);
        }
    
        public virtual int DeleteIntentAnswer(Nullable<int> answerID)
        {
            var answerIDParameter = answerID.HasValue ?
                new ObjectParameter("answerID", answerID) :
                new ObjectParameter("answerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteIntentAnswer", answerIDParameter);
        }
    }
}
